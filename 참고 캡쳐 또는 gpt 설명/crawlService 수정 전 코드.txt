const axios = require('axios');
const cheerio = require('cheerio');

async function crawlSaramin(keyword, pages = 1) {
    const jobs = [];
    const baseURL = "https://www.saramin.co.kr/zf_user/search/recruit";

    for (let page = 1; page <= pages; page++) {
        const url = `${baseURL}?searchType=search&searchword=${keyword}&recruitPage=${page}`;
        
        try {
            const { data } = await axios.get(url, {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
                }
            });

            const $ = cheerio.load(data);
            const jobListings = $('.item_recruit');

            jobListings.each((index, element) => {
                try {
                    const company = $(element).find('.corp_name a').text().trim();
                    const title = $(element).find('.job_tit a').text().trim();
                    const link = 'https://www.saramin.co.kr' + $(element).find('.job_tit a').attr('href');
                    
                    const conditions = $(element).find('.job_condition span');
                    const location = $(conditions[0]).text().trim() || '';
                    const experience = $(conditions[1]).text().trim() || '';
                    const education = $(conditions[2]).text().trim() || '';
                    const employmentType = $(conditions[3]).text().trim() || '';

                    const deadline = $(element).find('.job_date .date').text().trim();
                    const sector = $(element).find('.job_sector').text().trim() || '';
                    const salary = $(element).find('.area_badge .badge').text().trim() || '';

                    jobs.push({
                        회사명: company,
                        제목: title,
                        링크: link,
                        지역: location,
                        경력: experience,
                        학력: education,
                        고용형태: employmentType,
                        마감일: deadline,
                        직무분야: sector,
                        연봉정보: salary
                    });
                } catch (err) {
                    console.error("항목 파싱 중 에러:", err.message);
                }
            });

            console.log(`${page}페이지 크롤링 완료`);
        } catch (err) {
            console.error("페이지 요청 중 에러:", err.message);
        }
    }

    return jobs;
}

module.exports = { crawlSaramin };

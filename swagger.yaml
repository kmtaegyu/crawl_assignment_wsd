openapi: 3.0.1
info:
  title: Job Application API
  description: API documentation for the Job Application Backend Server
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

paths:
    /applications:
      post:
        summary: Apply for a job
        description: Allows a user to apply for a job.
        security:
          - bearerAuth: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    example: "64b7b88b07d1c9e0f8d5c4a1"
                  resumeLink:
                    type: string
                    example: "https://example.com/resume.pdf"
        responses:
          201:
            description: Application created successfully
      get:
        summary: Get application history
        description: Retrieve a user's job application history.
        security:
          - bearerAuth: []
        responses:
          200:
            description: A list of applications
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          jobId:
                            type: string
                          appliedAt:
                            type: string
                            format: date-time
    /bookmarks:
      post:
        summary: Add or remove a job from bookmarks
        security:
          - bearerAuth: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    example: "64b7b88b07d1c9e0f8d5c4a1"
        responses:
          200:
            description: Bookmark updated successfully
      get:
        summary: Get bookmarked jobs
        security:
          - bearerAuth: []
        responses:
          200:
            description: A list of bookmarked jobs
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Job'

    /auth/register:
      post:
        summary: Register a new user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
                  password:
                    type: string
                    example: password123
        responses:
          201:
            description: User registered successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 64b7b88b07d1c9e0f8d5c4a1
                        email:
                          type: string
                          example: user@example.com
          400:
            description: Invalid input
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: false
                    message:
                      type: string
                      example: "Email and password are required."
          500:
            description: Server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: false
                    message:
                      type: string
                      example: "Internal Server Error"                
    /auth/login:
      post:
        summary: Login user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: user@example.com
                  password:
                    type: string
                    example: password123
        responses:
          200:
            description: Login successful
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example : true
                    token:
                      type: string
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          401:
            description: Unauthorized
    /auth/profile:
      get:
        summary: Get user profile
        security:
          - bearerAuth: []
        responses:
          200:
            description: User profile retrieved
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 64b7b88b07d1c9e0f8d5c4a1
                        email:
                          type: string
                          example: user@example.com
          401:
            description: Unauthorized
    /jobs:
      get:
        summary: Get all jobs
        responses:
          200:
            description: Jobs retrieved successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Job'
      post:
        summary: Create a new job
        security:
          - bearerAuth: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        responses:
          201:
            description: Job created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      $ref: '#/components/schemas/Job'
    /jobs/crawl:
      get:
        summary: Crawl jobs from external source
        parameters:
          - name: keyword
            in: query
            required: false
            schema:
              type: string
              example: developer
          - name: pages
            in: query
            required: false
            schema:
              type: integer
              example: 2
        responses:
          200:
            description: Jobs crawled successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/CrawledJob'
          500:
            description: Server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: false
                    message:
                      type: string
                      example: "Internal Server Error"
    /jobs/{id}:
      put:
        summary: Update a job
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        responses:
          200:
            description: Job updated successfully
      delete:
        summary: Delete a job
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          200:
            description: Job deleted successfully

components:
  schemas:
    Job:
      type: object
      properties:
        title:
          type: string
          example: "Software Engineer"
        company:
          type: string
          example: "Tech Corp"
        location:
          type: string
          example: "Seoul, South Korea"
        salary:
          type: string
          example: "50,000 USD per year"
        experience:
          type: string
          example: "2+ years"
        education:
          type: string
          example: "Bachelor's Degree"
        employmentType:
          type: string
          example: "Full-Time"
        deadline:
          type: string
          example: "2024-12-31"
        sector:
          type: string
          example: "IT"
        link:
          type: string
          example: "https://example.com/job/12345"
    CrawledJob:
      type: object
      properties:
        company:
          type: string
          example: "Tech Corp"
        title:
          type: string
          example: "Software Engineer"
        link:
          type: string
          example: "https://example.com/job/12345"
        location:
          type: string
          example: "Seoul, South Korea"
        experience:
          type: string
          example: "2+ years"
        education:
          type: string
          example: "Bachelor's Degree"
        employmentType:
          type: string
          example: "Full-Time"
        deadline:
          type: string
          example: "2024-12-31"
        sector:
          type: string
          example: "IT"
        salary:
          type: string
          example: "50,000 USD per year"

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
    description: "Enter your JWT token in the format: Bearer {token}"
